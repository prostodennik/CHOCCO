const openItem=e=>{const t=e.closest(".teams__item"),a=t.find(".teams__descripton"),o=a.find(".teams__descriotion-block");e=o.height();const n=t.find(".teams__triangle");n.addClass("teams__triangle_up"),t.addClass("active"),a.height(e)},closeEveryItem=e=>{const t=e.find(".teams__descripton"),a=e.find(".teams__item"),o=e.find(".teams__triangle");o.removeClass("teams__triangle_up"),a.removeClass("active"),t.height(0)};$(".teams__item").click(e=>{const t=$(e.currentTarget);e=t.closest(".teams");const a=t.closest(".teams__item");a.hasClass("active")?closeEveryItem(e):(closeEveryItem(e),openItem(t))});let myMap;const init=()=>{myMap=new ymaps.Map("map",{center:[59.93916998692174,30.309015096732622],zoom:11,controls:[],garg:!1});let t=[[59.94554327989287,30.38935262114668],[59.91142323563909,30.50024587065841],[59.88693161784606,30.319658102103713],[59.97033574821672,30.315194906302924]],a=new ymaps.GeoObjectCollection({},{draggable:!1,iconLayout:"default#image",iconImageHref:"./img/marker.svg",iconImageSize:[46,57],iconImageOffset:[-35,-52]});for(let e=0;e<t.length;e++)a.add(new ymaps.Placemark(t[e]));myMap.geoObjects.add(a),myMap.behaviors.disable("scrollZoom")};ymaps.ready(init);const mesureWidth=e=>{let t=0;var a=$(window).width();const o=e.closest(".slide-menu"),n=o.find(".slide-menu__title");var l=n.width()*n.length;const r=e.find(".slide-menu__container");var s=parseInt(r.css("padding-left")),e=parseInt(r.css("padding-right"));return t=480<a&&a<769?a-l:a<480?a-n.width():500,{container:t,textContainer:t-e-s}},closeEveryItemCont=e=>{const t=e.find(".slide-menu__item"),a=e.find(".slide-menu__content");t.removeClass("active-acco"),a.width(0)},openItemAcco=e=>{const t=e.find(".slide-menu__content");var a=mesureWidth(e);const o=e.find(".slide-menu__container");e.addClass("active-acco"),t.width(a.container),o.width(a.textContainer)};$(".slide-menu__title").on("click",e=>{e.preventDefault();const t=$(e.currentTarget),a=t.closest(".slide-menu__item");var o=a.hasClass("active-acco"),e=t.closest(".slide-menu");o?closeEveryItemCont(e):(closeEveryItemCont(e),openItemAcco(a))}),$(".slide-menu__close").on("click",e=>{e.preventDefault(),closeEveryItemCont($(".slide-menu"))});const hamburgerBtn=document.querySelector(".hamburger"),modalMenu=document.querySelector(".fullscreen-menu"),body=document.body,hamburgerBtnClose=document.getElementById("close");hamburgerBtn.addEventListener("click",function(){modalMenu.style.display="flex",body.style.overflow="hidden"}),hamburgerBtnClose.addEventListener("click",function(){modalMenu.style.display="none",body.style.overflow=""});const validateFields=(e,t)=>{return t.forEach(e=>{e.removeClass("input-error"),""==e.val().trim()&&e.addClass("input-error")}),0==e.find(".input-error").length};function openModal(e){$(".modal").addClass("modal--active"),$("body").addClass("blocked")}$("#form").on("submit",function(e){e.preventDefault();const t=$(e.currentTarget),a=t.find("[name='name']"),o=t.find("[name='phone']"),n=t.find("[name='comment']"),l=t.find("[name='to']"),r=$("#modal"),s=r.find(".modal__content");if(r.removeClass("error-modal"),validateFields(t,[a,o,n,l])){const i=$.ajax({url:"https://webdev-api.loftschool.com/sendmail",method:"post",data:{name:a.val(),phone:o.val(),comment:n.val(),to:l.val()}});i.done(e=>{s.text(e.message)}),i.fail(e=>{e=e.responseJSON.message;s.text(e),r.addClass("error-modal")}),i.always(()=>{openModal()})}}),$(".js-modal--close").click(function(e){e.preventDefault(),$(".modal").removeClass("modal--active"),$("body").removeClass("blocked")});const section=$(".section"),display=$(".maincontent"),sideMenu=$(".fixed-menu__link"),fixedMenu=$(".fixed-menu"),menuItems=fixedMenu.find(".fixed-menu__item"),mobileDetect=new MobileDetect(window.navigator.userAgent),isMobile=mobileDetect.mobile();let inScroll=!1;section.first().addClass("active-scroll");const countSectionPosition=e=>{e*=-100;return isNaN(e)?(console.error("переданно не верное значение в countSectionPosition"),0):e},changeMenuThemeForSection=e=>{const t=section.eq(e);e="fixed-menu_black";"black"==t.attr("data-sidemenu-theme")?sideMenu.addClass(e):sideMenu.removeClass(e)},resetActiveClassForItem=(e,t,a)=>{e.eq(t).addClass(a).siblings().removeClass(a)},perfomTransition=e=>{var t;inScroll||(inScroll=!0,t=countSectionPosition(e),changeMenuThemeForSection(e),display.css({transform:`translateY(${t}%)`}),resetActiveClassForItem(section,e,"active-scroll"),setTimeout(()=>{inScroll=!1,resetActiveClassForItem(menuItems,e,"fixed-menu__item_active")},1300))},viewportScroller=()=>{const e=section.filter(".active-scroll"),t=e.next(),a=e.prev();return{next(){t.length&&perfomTransition(t.index())},prev(){a.length&&perfomTransition(a.index())}}};$(window).on("wheel",e=>{e=e.originalEvent.deltaY;const t=viewportScroller();0<e&&t.next(),e<0&&t.prev()}),$(window).on("keydown",e=>{var t=e.target.tagName.toLowerCase(),t="input"==t||"textarea"==t;const a=viewportScroller();if(!t)switch(e.keyCode){case 38:a.prev();break;case 40:a.next()}}),$(".wrapper").on("touchmove",e=>e.preventDefault()),$("[data-scroll-to]").click(e=>{e.preventDefault(),modalMenu.style.display="none",body.style.overflow="";const t=$(e.currentTarget);e=t.attr("data-scroll-to");const a=$(`[data-section-id=${e}]`);perfomTransition(a.index())}),isMobile&&$("body").swipe({swipe:function(e,t){const a=viewportScroller();let o="";"up"==t&&(o="next",a[o]()),"down"==t&&(o="prev",a[o]())}});const playerContainer=document.querySelector(".video__player"),playerStart=document.querySelector(".player__start"),playerWrapper=document.querySelector(".player__wrapper"),video=document.querySelector(".video"),playerPlay=document.querySelector(".player__play"),playerPlayback=document.querySelector(".player__playback-line"),playerPlaybackBtn=document.querySelector(".player__playback-button"),playerPlaybackIcon=document.querySelector(".player__sound-icon"),playerPlaybackIconMute=document.querySelector(".player__sound-icon-mute"),soundLine=document.querySelector(".player__sound-line"),soundBtn=document.querySelector(".player__sound-button");let startVolume=0,currentVolume;const hadleStart=()=>{video.paused?video.play():video.pause()};playerPlay.addEventListener("click",e=>{e.stopPropagation(),hadleStart()}),playerStart.addEventListener("click",hadleStart),playerWrapper.addEventListener("click",hadleStart),video.onplay=()=>{playerStart.classList.add("paused"),playerStart.classList.remove("player__start"),playerPlay.classList.add("player__play-none")},video.onpause=()=>{playerStart.classList.remove("paused"),playerStart.classList.add("player__start"),playerPlay.classList.remove("player__play-none")};const changeVolume=e=>{const t=e.currentTarget;var a=t.getBoundingClientRect().left,o=parseInt(getComputedStyle(t).width),o=(e.pageX-a)/o*100;video.volume=o/100,soundBtn.style.left=`${o}%`},toogleSound=()=>{playerPlaybackIcon.classList.toggle("sound-none"),playerPlaybackIconMute.classList.toggle("sound-mute"),0==video.volume?(video.volume=currentVolume,soundBtn.style.left=`${100*currentVolume}%`):(currentVolume=video.volume,video.volume=startVolume,soundBtn.style.left=`${startVolume}%`)};soundLine.addEventListener("click",changeVolume),playerPlaybackIcon.addEventListener("click",toogleSound),playerPlaybackIconMute.addEventListener("click",toogleSound);const handleDuration=e=>{var t=parseInt(getComputedStyle(playerPlayback).width),a=parseInt(getComputedStyle(playerPlaybackBtn).width),t=(e.offsetX+a/2)*video.duration/t;video.currentTime=t},updateTime=()=>{var e=video.currentTime/video.duration;playerPlaybackBtn.style.left=`${100*e}%`,video.ended&&(video.currentTime=0)};playerPlayback.addEventListener("click",handleDuration),video.addEventListener("timeupdate",updateTime);const slider=$(".shop").bxSlider({pager:!1,controls:!1,touchEnabled:$(window).width()<768});$(".arrow__left").click(e=>{slider.goToPrevSlide()}),$(".arrow__right").click(e=>{slider.goToNextSlide()});const findBlockByAlias=a=>$(".reviews__item").filter((e,t)=>$(t).attr("data-linked-with")==a);$(".reviews__switcher-link").click(e=>{e.preventDefault();const t=$(e.currentTarget);e=t.attr("data-open");const a=findBlockByAlias(e),o=t.closest(".interactive-avatar");a.addClass("active").siblings().removeClass("active"),o.addClass("interactive-avatar_active").siblings().removeClass("interactive-avatar_active")});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
